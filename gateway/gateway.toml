workers = 8
max_blocking = 64
ident = "Dstack Gateway"
temp_dir = "/tmp"
keep_alive = 10
log_level = "info"
port = 8010

[core]
kms_url = ""
state_path = "./gateway-state.json"
# auto set soft ulimit to hard ulimit
set_ulimit = true
rpc_domain = ""
run_in_dstack = true

[core.auth]
enabled = false
url = "http://localhost/app-auth"
timeout = "5s"

[core.admin]
enabled = false
port = 8011

[core.certbot]
enabled = false
workdir = "/etc/certbot"
acme_url = "https://acme-staging-v02.api.letsencrypt.org/directory"
cf_api_token = ""
cf_zone_id = ""
auto_set_caa = true
domain = "*.example.com"
renew_interval = "1h"
renew_before_expiration = "10d"
renew_timeout = "120s"

[core.wg]
public_key = ""
private_key = ""
listen_port = 51820
ip = "10.0.0.1/24"
reserved_net = ["10.0.0.1/32"]
client_ip_range = "10.0.0.0/25"
config_path = "/etc/wireguard/wg0.conf"
interface = "wg0"
endpoint = "10.0.2.2:51820"

[core.proxy]
cert_chain = "/etc/rproxy/certs/cert.pem"
cert_key = "/etc/rproxy/certs/key.pem"
tls_crypto_provider = "aws-lc-rs"
tls_versions = ["1.2"]
base_domain = "app.localhost"
listen_addr = "0.0.0.0"
listen_port = 8443
agent_port = 8090
buffer_size = 8192
# number of hosts to try to connect to
connect_top_n = 3
localhost_enabled = false
app_address_ns_prefix = "_dstack-app-address"
workers = 32

[core.proxy.timeouts]
# Timeout for establishing a connection to the target app.
connect = "5s"
# TLS-termination handshake timeout or SNI extraction timeout.
handshake = "5s"

# Timeout for top n hosts selection
cache_top_n = "30s"

# Enable data transfer timeouts below. This might impact performance. Turn off if
# bad performance is observed.
data_timeout_enabled = true
# Timeout for a connection without any data transfer.
idle = "10m"
# Timeout for writing data to the target app or to the client.
write = "5s"
# Timeout for shutting down a connection.
shutdown = "5s"
# Timeout for total connection duration.
total = "5h"

[core.recycle]
enabled = true
interval = "5m"
timeout = "10h"
node_timeout = "10m"

[core.sync]
enabled = false
interval = "30s"
broadcast_interval = "10m"
timeout = "2s"
my_url = "https://localhost:8011"
# The url of the bootnode used to join the network
bootnode = "https://localhost:8011"
