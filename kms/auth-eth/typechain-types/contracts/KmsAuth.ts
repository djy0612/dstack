/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export declare namespace IAppAuth {
  export type AppBootInfoStruct = {
    appId: AddressLike;
    composeHash: BytesLike;
    instanceId: AddressLike;
    deviceId: BytesLike;
    mrAggregated: BytesLike;
    mrSystem: BytesLike;
    osImageHash: BytesLike;
    tcbStatus: string;
    advisoryIds: string[];
  };

  export type AppBootInfoStructOutput = [
    appId: string,
    composeHash: string,
    instanceId: string,
    deviceId: string,
    mrAggregated: string,
    mrSystem: string,
    osImageHash: string,
    tcbStatus: string,
    advisoryIds: string[]
  ] & {
    appId: string;
    composeHash: string;
    instanceId: string;
    deviceId: string;
    mrAggregated: string;
    mrSystem: string;
    osImageHash: string;
    tcbStatus: string;
    advisoryIds: string[];
  };
}

export declare namespace KmsAuth {
  export type KmsInfoStruct = {
    k256Pubkey: BytesLike;
    caPubkey: BytesLike;
    quote: BytesLike;
    eventlog: BytesLike;
  };

  export type KmsInfoStructOutput = [
    k256Pubkey: string,
    caPubkey: string,
    quote: string,
    eventlog: string
  ] & { k256Pubkey: string; caPubkey: string; quote: string; eventlog: string };
}

export interface KmsAuthInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "UPGRADE_INTERFACE_VERSION"
      | "addKmsAggregatedMr"
      | "addKmsDevice"
      | "addOsImageHash"
      | "allowedOsImages"
      | "appAuthImplementation"
      | "apps"
      | "deployAndRegisterApp"
      | "gatewayAppId"
      | "initialize"
      | "isAppAllowed"
      | "isKmsAllowed"
      | "kmsAllowedAggregatedMrs"
      | "kmsAllowedDeviceIds"
      | "kmsInfo"
      | "nextAppId"
      | "nextAppSequence"
      | "owner"
      | "proxiableUUID"
      | "registerApp"
      | "removeKmsAggregatedMr"
      | "removeKmsDevice"
      | "removeOsImageHash"
      | "renounceOwnership"
      | "setAppAuthImplementation"
      | "setGatewayAppId"
      | "setKmsEventlog"
      | "setKmsInfo"
      | "setKmsQuote"
      | "supportsInterface"
      | "transferOwnership"
      | "upgradeToAndCall"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AppAuthImplementationSet"
      | "AppDeployedViaFactory"
      | "AppRegistered"
      | "GatewayAppIdSet"
      | "Initialized"
      | "KmsAggregatedMrAdded"
      | "KmsAggregatedMrRemoved"
      | "KmsDeviceAdded"
      | "KmsDeviceRemoved"
      | "KmsInfoSet"
      | "OsImageHashAdded"
      | "OsImageHashRemoved"
      | "OwnershipTransferred"
      | "Upgraded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "UPGRADE_INTERFACE_VERSION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addKmsAggregatedMr",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addKmsDevice",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addOsImageHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "allowedOsImages",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "appAuthImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "apps", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "deployAndRegisterApp",
    values: [AddressLike, boolean, boolean, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "gatewayAppId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isAppAllowed",
    values: [IAppAuth.AppBootInfoStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "isKmsAllowed",
    values: [IAppAuth.AppBootInfoStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "kmsAllowedAggregatedMrs",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "kmsAllowedDeviceIds",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "kmsInfo", values?: undefined): string;
  encodeFunctionData(functionFragment: "nextAppId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "nextAppSequence",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "proxiableUUID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "registerApp",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeKmsAggregatedMr",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeKmsDevice",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeOsImageHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAppAuthImplementation",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setGatewayAppId",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setKmsEventlog",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setKmsInfo",
    values: [KmsAuth.KmsInfoStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setKmsQuote",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeToAndCall",
    values: [AddressLike, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "UPGRADE_INTERFACE_VERSION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addKmsAggregatedMr",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addKmsDevice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addOsImageHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowedOsImages",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "appAuthImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "apps", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deployAndRegisterApp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gatewayAppId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isAppAllowed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKmsAllowed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kmsAllowedAggregatedMrs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kmsAllowedDeviceIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kmsInfo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nextAppId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "nextAppSequence",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proxiableUUID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerApp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeKmsAggregatedMr",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeKmsDevice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeOsImageHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAppAuthImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGatewayAppId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setKmsEventlog",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setKmsInfo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setKmsQuote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "upgradeToAndCall",
    data: BytesLike
  ): Result;
}

export namespace AppAuthImplementationSetEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AppDeployedViaFactoryEvent {
  export type InputTuple = [
    appId: AddressLike,
    proxyAddress: AddressLike,
    deployer: AddressLike
  ];
  export type OutputTuple = [
    appId: string,
    proxyAddress: string,
    deployer: string
  ];
  export interface OutputObject {
    appId: string;
    proxyAddress: string;
    deployer: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AppRegisteredEvent {
  export type InputTuple = [appId: AddressLike];
  export type OutputTuple = [appId: string];
  export interface OutputObject {
    appId: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace GatewayAppIdSetEvent {
  export type InputTuple = [gatewayAppId: string];
  export type OutputTuple = [gatewayAppId: string];
  export interface OutputObject {
    gatewayAppId: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace KmsAggregatedMrAddedEvent {
  export type InputTuple = [mrAggregated: BytesLike];
  export type OutputTuple = [mrAggregated: string];
  export interface OutputObject {
    mrAggregated: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace KmsAggregatedMrRemovedEvent {
  export type InputTuple = [mrAggregated: BytesLike];
  export type OutputTuple = [mrAggregated: string];
  export interface OutputObject {
    mrAggregated: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace KmsDeviceAddedEvent {
  export type InputTuple = [deviceId: BytesLike];
  export type OutputTuple = [deviceId: string];
  export interface OutputObject {
    deviceId: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace KmsDeviceRemovedEvent {
  export type InputTuple = [deviceId: BytesLike];
  export type OutputTuple = [deviceId: string];
  export interface OutputObject {
    deviceId: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace KmsInfoSetEvent {
  export type InputTuple = [k256Pubkey: BytesLike];
  export type OutputTuple = [k256Pubkey: string];
  export interface OutputObject {
    k256Pubkey: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OsImageHashAddedEvent {
  export type InputTuple = [osImageHash: BytesLike];
  export type OutputTuple = [osImageHash: string];
  export interface OutputObject {
    osImageHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OsImageHashRemovedEvent {
  export type InputTuple = [osImageHash: BytesLike];
  export type OutputTuple = [osImageHash: string];
  export interface OutputObject {
    osImageHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpgradedEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface KmsAuth extends BaseContract {
  connect(runner?: ContractRunner | null): KmsAuth;
  waitForDeployment(): Promise<this>;

  interface: KmsAuthInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  UPGRADE_INTERFACE_VERSION: TypedContractMethod<[], [string], "view">;

  addKmsAggregatedMr: TypedContractMethod<
    [mrAggregated: BytesLike],
    [void],
    "nonpayable"
  >;

  addKmsDevice: TypedContractMethod<
    [deviceId: BytesLike],
    [void],
    "nonpayable"
  >;

  addOsImageHash: TypedContractMethod<
    [osImageHash: BytesLike],
    [void],
    "nonpayable"
  >;

  allowedOsImages: TypedContractMethod<[arg0: BytesLike], [boolean], "view">;

  appAuthImplementation: TypedContractMethod<[], [string], "view">;

  apps: TypedContractMethod<
    [arg0: AddressLike],
    [[boolean, string] & { isRegistered: boolean; controller: string }],
    "view"
  >;

  deployAndRegisterApp: TypedContractMethod<
    [
      initialOwner: AddressLike,
      disableUpgrades: boolean,
      allowAnyDevice: boolean,
      initialDeviceId: BytesLike,
      initialComposeHash: BytesLike
    ],
    [[string, string] & { appId: string; proxyAddress: string }],
    "nonpayable"
  >;

  gatewayAppId: TypedContractMethod<[], [string], "view">;

  initialize: TypedContractMethod<
    [initialOwner: AddressLike, _appAuthImplementation: AddressLike],
    [void],
    "nonpayable"
  >;

  isAppAllowed: TypedContractMethod<
    [bootInfo: IAppAuth.AppBootInfoStruct],
    [[boolean, string] & { isAllowed: boolean; reason: string }],
    "view"
  >;

  isKmsAllowed: TypedContractMethod<
    [bootInfo: IAppAuth.AppBootInfoStruct],
    [[boolean, string] & { isAllowed: boolean; reason: string }],
    "view"
  >;

  kmsAllowedAggregatedMrs: TypedContractMethod<
    [arg0: BytesLike],
    [boolean],
    "view"
  >;

  kmsAllowedDeviceIds: TypedContractMethod<
    [arg0: BytesLike],
    [boolean],
    "view"
  >;

  kmsInfo: TypedContractMethod<
    [],
    [
      [string, string, string, string] & {
        k256Pubkey: string;
        caPubkey: string;
        quote: string;
        eventlog: string;
      }
    ],
    "view"
  >;

  nextAppId: TypedContractMethod<[], [string], "view">;

  nextAppSequence: TypedContractMethod<[arg0: AddressLike], [bigint], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  proxiableUUID: TypedContractMethod<[], [string], "view">;

  registerApp: TypedContractMethod<
    [controller: AddressLike],
    [void],
    "nonpayable"
  >;

  removeKmsAggregatedMr: TypedContractMethod<
    [mrAggregated: BytesLike],
    [void],
    "nonpayable"
  >;

  removeKmsDevice: TypedContractMethod<
    [deviceId: BytesLike],
    [void],
    "nonpayable"
  >;

  removeOsImageHash: TypedContractMethod<
    [osImageHash: BytesLike],
    [void],
    "nonpayable"
  >;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  setAppAuthImplementation: TypedContractMethod<
    [_implementation: AddressLike],
    [void],
    "nonpayable"
  >;

  setGatewayAppId: TypedContractMethod<[appId: string], [void], "nonpayable">;

  setKmsEventlog: TypedContractMethod<
    [eventlog: BytesLike],
    [void],
    "nonpayable"
  >;

  setKmsInfo: TypedContractMethod<
    [info: KmsAuth.KmsInfoStruct],
    [void],
    "nonpayable"
  >;

  setKmsQuote: TypedContractMethod<[quote: BytesLike], [void], "nonpayable">;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  upgradeToAndCall: TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "UPGRADE_INTERFACE_VERSION"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "addKmsAggregatedMr"
  ): TypedContractMethod<[mrAggregated: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addKmsDevice"
  ): TypedContractMethod<[deviceId: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addOsImageHash"
  ): TypedContractMethod<[osImageHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "allowedOsImages"
  ): TypedContractMethod<[arg0: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "appAuthImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "apps"
  ): TypedContractMethod<
    [arg0: AddressLike],
    [[boolean, string] & { isRegistered: boolean; controller: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "deployAndRegisterApp"
  ): TypedContractMethod<
    [
      initialOwner: AddressLike,
      disableUpgrades: boolean,
      allowAnyDevice: boolean,
      initialDeviceId: BytesLike,
      initialComposeHash: BytesLike
    ],
    [[string, string] & { appId: string; proxyAddress: string }],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "gatewayAppId"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<
    [initialOwner: AddressLike, _appAuthImplementation: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "isAppAllowed"
  ): TypedContractMethod<
    [bootInfo: IAppAuth.AppBootInfoStruct],
    [[boolean, string] & { isAllowed: boolean; reason: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "isKmsAllowed"
  ): TypedContractMethod<
    [bootInfo: IAppAuth.AppBootInfoStruct],
    [[boolean, string] & { isAllowed: boolean; reason: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "kmsAllowedAggregatedMrs"
  ): TypedContractMethod<[arg0: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "kmsAllowedDeviceIds"
  ): TypedContractMethod<[arg0: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "kmsInfo"
  ): TypedContractMethod<
    [],
    [
      [string, string, string, string] & {
        k256Pubkey: string;
        caPubkey: string;
        quote: string;
        eventlog: string;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "nextAppId"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "nextAppSequence"
  ): TypedContractMethod<[arg0: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "proxiableUUID"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "registerApp"
  ): TypedContractMethod<[controller: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removeKmsAggregatedMr"
  ): TypedContractMethod<[mrAggregated: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removeKmsDevice"
  ): TypedContractMethod<[deviceId: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removeOsImageHash"
  ): TypedContractMethod<[osImageHash: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setAppAuthImplementation"
  ): TypedContractMethod<[_implementation: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setGatewayAppId"
  ): TypedContractMethod<[appId: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setKmsEventlog"
  ): TypedContractMethod<[eventlog: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setKmsInfo"
  ): TypedContractMethod<[info: KmsAuth.KmsInfoStruct], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setKmsQuote"
  ): TypedContractMethod<[quote: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "upgradeToAndCall"
  ): TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  getEvent(
    key: "AppAuthImplementationSet"
  ): TypedContractEvent<
    AppAuthImplementationSetEvent.InputTuple,
    AppAuthImplementationSetEvent.OutputTuple,
    AppAuthImplementationSetEvent.OutputObject
  >;
  getEvent(
    key: "AppDeployedViaFactory"
  ): TypedContractEvent<
    AppDeployedViaFactoryEvent.InputTuple,
    AppDeployedViaFactoryEvent.OutputTuple,
    AppDeployedViaFactoryEvent.OutputObject
  >;
  getEvent(
    key: "AppRegistered"
  ): TypedContractEvent<
    AppRegisteredEvent.InputTuple,
    AppRegisteredEvent.OutputTuple,
    AppRegisteredEvent.OutputObject
  >;
  getEvent(
    key: "GatewayAppIdSet"
  ): TypedContractEvent<
    GatewayAppIdSetEvent.InputTuple,
    GatewayAppIdSetEvent.OutputTuple,
    GatewayAppIdSetEvent.OutputObject
  >;
  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "KmsAggregatedMrAdded"
  ): TypedContractEvent<
    KmsAggregatedMrAddedEvent.InputTuple,
    KmsAggregatedMrAddedEvent.OutputTuple,
    KmsAggregatedMrAddedEvent.OutputObject
  >;
  getEvent(
    key: "KmsAggregatedMrRemoved"
  ): TypedContractEvent<
    KmsAggregatedMrRemovedEvent.InputTuple,
    KmsAggregatedMrRemovedEvent.OutputTuple,
    KmsAggregatedMrRemovedEvent.OutputObject
  >;
  getEvent(
    key: "KmsDeviceAdded"
  ): TypedContractEvent<
    KmsDeviceAddedEvent.InputTuple,
    KmsDeviceAddedEvent.OutputTuple,
    KmsDeviceAddedEvent.OutputObject
  >;
  getEvent(
    key: "KmsDeviceRemoved"
  ): TypedContractEvent<
    KmsDeviceRemovedEvent.InputTuple,
    KmsDeviceRemovedEvent.OutputTuple,
    KmsDeviceRemovedEvent.OutputObject
  >;
  getEvent(
    key: "KmsInfoSet"
  ): TypedContractEvent<
    KmsInfoSetEvent.InputTuple,
    KmsInfoSetEvent.OutputTuple,
    KmsInfoSetEvent.OutputObject
  >;
  getEvent(
    key: "OsImageHashAdded"
  ): TypedContractEvent<
    OsImageHashAddedEvent.InputTuple,
    OsImageHashAddedEvent.OutputTuple,
    OsImageHashAddedEvent.OutputObject
  >;
  getEvent(
    key: "OsImageHashRemoved"
  ): TypedContractEvent<
    OsImageHashRemovedEvent.InputTuple,
    OsImageHashRemovedEvent.OutputTuple,
    OsImageHashRemovedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "Upgraded"
  ): TypedContractEvent<
    UpgradedEvent.InputTuple,
    UpgradedEvent.OutputTuple,
    UpgradedEvent.OutputObject
  >;

  filters: {
    "AppAuthImplementationSet(address)": TypedContractEvent<
      AppAuthImplementationSetEvent.InputTuple,
      AppAuthImplementationSetEvent.OutputTuple,
      AppAuthImplementationSetEvent.OutputObject
    >;
    AppAuthImplementationSet: TypedContractEvent<
      AppAuthImplementationSetEvent.InputTuple,
      AppAuthImplementationSetEvent.OutputTuple,
      AppAuthImplementationSetEvent.OutputObject
    >;

    "AppDeployedViaFactory(address,address,address)": TypedContractEvent<
      AppDeployedViaFactoryEvent.InputTuple,
      AppDeployedViaFactoryEvent.OutputTuple,
      AppDeployedViaFactoryEvent.OutputObject
    >;
    AppDeployedViaFactory: TypedContractEvent<
      AppDeployedViaFactoryEvent.InputTuple,
      AppDeployedViaFactoryEvent.OutputTuple,
      AppDeployedViaFactoryEvent.OutputObject
    >;

    "AppRegistered(address)": TypedContractEvent<
      AppRegisteredEvent.InputTuple,
      AppRegisteredEvent.OutputTuple,
      AppRegisteredEvent.OutputObject
    >;
    AppRegistered: TypedContractEvent<
      AppRegisteredEvent.InputTuple,
      AppRegisteredEvent.OutputTuple,
      AppRegisteredEvent.OutputObject
    >;

    "GatewayAppIdSet(string)": TypedContractEvent<
      GatewayAppIdSetEvent.InputTuple,
      GatewayAppIdSetEvent.OutputTuple,
      GatewayAppIdSetEvent.OutputObject
    >;
    GatewayAppIdSet: TypedContractEvent<
      GatewayAppIdSetEvent.InputTuple,
      GatewayAppIdSetEvent.OutputTuple,
      GatewayAppIdSetEvent.OutputObject
    >;

    "Initialized(uint64)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "KmsAggregatedMrAdded(bytes32)": TypedContractEvent<
      KmsAggregatedMrAddedEvent.InputTuple,
      KmsAggregatedMrAddedEvent.OutputTuple,
      KmsAggregatedMrAddedEvent.OutputObject
    >;
    KmsAggregatedMrAdded: TypedContractEvent<
      KmsAggregatedMrAddedEvent.InputTuple,
      KmsAggregatedMrAddedEvent.OutputTuple,
      KmsAggregatedMrAddedEvent.OutputObject
    >;

    "KmsAggregatedMrRemoved(bytes32)": TypedContractEvent<
      KmsAggregatedMrRemovedEvent.InputTuple,
      KmsAggregatedMrRemovedEvent.OutputTuple,
      KmsAggregatedMrRemovedEvent.OutputObject
    >;
    KmsAggregatedMrRemoved: TypedContractEvent<
      KmsAggregatedMrRemovedEvent.InputTuple,
      KmsAggregatedMrRemovedEvent.OutputTuple,
      KmsAggregatedMrRemovedEvent.OutputObject
    >;

    "KmsDeviceAdded(bytes32)": TypedContractEvent<
      KmsDeviceAddedEvent.InputTuple,
      KmsDeviceAddedEvent.OutputTuple,
      KmsDeviceAddedEvent.OutputObject
    >;
    KmsDeviceAdded: TypedContractEvent<
      KmsDeviceAddedEvent.InputTuple,
      KmsDeviceAddedEvent.OutputTuple,
      KmsDeviceAddedEvent.OutputObject
    >;

    "KmsDeviceRemoved(bytes32)": TypedContractEvent<
      KmsDeviceRemovedEvent.InputTuple,
      KmsDeviceRemovedEvent.OutputTuple,
      KmsDeviceRemovedEvent.OutputObject
    >;
    KmsDeviceRemoved: TypedContractEvent<
      KmsDeviceRemovedEvent.InputTuple,
      KmsDeviceRemovedEvent.OutputTuple,
      KmsDeviceRemovedEvent.OutputObject
    >;

    "KmsInfoSet(bytes)": TypedContractEvent<
      KmsInfoSetEvent.InputTuple,
      KmsInfoSetEvent.OutputTuple,
      KmsInfoSetEvent.OutputObject
    >;
    KmsInfoSet: TypedContractEvent<
      KmsInfoSetEvent.InputTuple,
      KmsInfoSetEvent.OutputTuple,
      KmsInfoSetEvent.OutputObject
    >;

    "OsImageHashAdded(bytes32)": TypedContractEvent<
      OsImageHashAddedEvent.InputTuple,
      OsImageHashAddedEvent.OutputTuple,
      OsImageHashAddedEvent.OutputObject
    >;
    OsImageHashAdded: TypedContractEvent<
      OsImageHashAddedEvent.InputTuple,
      OsImageHashAddedEvent.OutputTuple,
      OsImageHashAddedEvent.OutputObject
    >;

    "OsImageHashRemoved(bytes32)": TypedContractEvent<
      OsImageHashRemovedEvent.InputTuple,
      OsImageHashRemovedEvent.OutputTuple,
      OsImageHashRemovedEvent.OutputObject
    >;
    OsImageHashRemoved: TypedContractEvent<
      OsImageHashRemovedEvent.InputTuple,
      OsImageHashRemovedEvent.OutputTuple,
      OsImageHashRemovedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "Upgraded(address)": TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
    Upgraded: TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
  };
}
